 1                   2                     3                     4
  \                 / \                   / \                   / \ 
   2               1   3                 2   4                 2   5
    \                   \               /     \               / \
     3                   4             1       5             1   3
      \                   \
       4                   5
        \ 
         5

define of balanced)
the depth of left and right subtrees of any node never differ by more than 1

balance_factor := height(right_subtree) - height(left_subtree)
mid <- low + (high - low)/2
root <- new node with value arr[mid]

define of perfect balanced tree)
has largest number n of node given height h: n = 2^(h+1)-1, thus h = lg(n+1)-1 = O(lg n)

^           4
n(7)      /   \
h(2)     2     6
        / \   / \
^      1   3 5   7 

define of rotation)

     ry      ->      px           r:= root                 p = r.O
    /  \            /  \          p:= pivot                r.O = p.R
   Ox  Rc          a    y         O:= opposite side        p.R = r
  /  \                 / \        R:= rotation side        r = p
 a    b               b   c

(a < x < b < y < c)

example of rotation)

      (4)      (rotate_right)       2
      / \                          / \
     2   5                        1   4
    / \                              / \
   1   3                            3   5

      (4)      (rotate_right)      3
      /                           / \
     3                           2   4
    /                           /
   2                           1
  /
 1

     3      (rotate_left)      (3)       (rotate_right)        2
    /                          /                              / \
  (1)                         2                              1   3
    \                        /
     2                      1
 
   4        (rotate_left)       (4)      (rotate_right)       2
  /                             /                            / \
(1)                            2                            1   4
  \                           / \                              /
   2                         1   3                            3
    \
     3
    
     4      (rotate_right)       4        (rotate_left)         4
    / \                         / \                           /   \
   2   5                       2  (5)                        2     6
  / \   \                     / \   \                       / \   / \
 1   3  (7)                  1   3   6                     1   3 5   7  
        /                             \
       6                               7
